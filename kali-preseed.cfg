# kali-preseed.cfg

### Localization
d-i debian-installer/locale string en_US.UTF-8
d-i console-setup/ask_detect boolean false
d-i console-setup/layoutcode string us

### Network Configuration
d-i netcfg/choose_interface select auto
d-i netcfg/get_hostname string kali-vm
d-i netcfg/get_domain string local

### Mirror Settings
d-i mirror/country string manual
d-i mirror/http/hostname string http.kali.org
d-i mirror/http/directory string /kali
d-i mirror/http/proxy string

### Account Setup
## Root Account
d-i passwd/root-login boolean true
d-i passwd/root-password password YOUR_SECURE_ROOT_PASSWORD
d-i passwd/root-password-again password YOUR_SECURE_ROOT_PASSWORD

## Non-root User
d-i passwd/user-fullname string KaliUser
d-i passwd/username string kaliuser
d-i passwd/user-password password USER_SECURE_PASSWORD
d-i passwd/user-password-again password USER_SECURE_PASSWORD
d-i user-setup/allow-password-weak boolean false

### Clock and Timezone
d-i clock-setup/utc boolean true
d-i time/zone string UTC
d-i clock-setup/ntp boolean true

### Partitioning
d-i partman-auto/method string crypto
d-i partman-crypto/passphrase password DISK_ENCRYPTION_PASSPHRASE
d-i partman-crypto/passphrase-again password DISK_ENCRYPTION_PASSPHRASE
d-i partman-auto-lvm/guided_size string max
d-i partman-auto/choose_recipe select atomic
d-i partman/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true

### Base System Installation
d-i base-installer/kernel/override-image string linux-image-amd64

### Package Selection
tasksel tasksel/first multiselect standard, kali-desktop
d-i pkgsel/include string \
    openssh-server \
    fail2ban \
    ufw \
    auditd \
    clamav \
    apparmor \
    unattended-upgrades \
    ntp \
    htop \
    curl \
    wget \
    vim \
    git \
    lynis \
    rkhunter \
    chkrootkit \
    sysstat \
    aide \
    docker.io \
    openssl \
    gnupg \
    net-tools \
    nmap \
    tcpdump \
    wireshark \
    ethtool \
    traceroute \
    dnsutils
d-i pkgsel/upgrade select full-upgrade

### Boot Loader Installation
d-i grub-installer/only_debian boolean true
d-i grub-installer/with_other_os boolean false

### Preseed Commands for Post-Installation Hardening
d-i preseed/late_command string \
    # Enable and configure UFW firewall \
    in-target systemctl enable ufw; \
    in-target ufw default deny incoming; \
    in-target ufw default allow outgoing; \
    in-target ufw allow 22/tcp; \
    in-target ufw allow 80/tcp; \
    in-target ufw allow 443/tcp; \
    in-target ufw allow 8080/tcp; \
    in-target ufw enable; \
    \
    # Harden SSH configuration \
    in-target sed -i 's/^PermitRootLogin yes/PermitRootLogin no/' /etc/ssh/sshd_config; \
    in-target sed -i 's/^#PasswordAuthentication yes/PasswordAuthentication no/' /etc/ssh/sshd_config; \
    in-target sed -i 's/^#ChallengeResponseAuthentication yes/ChallengeResponseAuthentication no/' /etc/ssh/sshd_config; \
    in-target systemctl restart ssh; \
    \
    # Enable and configure Fail2Ban \
    in-target systemctl enable fail2ban; \
    in-target systemctl start fail2ban; \
    cp /etc/fail2ban/jail.conf /etc/fail2ban/jail.local; \
    in-target sed -i 's/^bantime = .*/bantime = 3600/' /etc/fail2ban/jail.local; \
    in-target sed -i 's/^maxretry = .*/maxretry = 5/' /etc/fail2ban/jail.local; \
    in-target systemctl restart fail2ban; \
    \
    # Enable and configure Auditd \
    in-target systemctl enable auditd; \
    in-target systemctl start auditd; \
    cp /etc/audit/audit.rules /etc/audit/audit.rules.bak; \
    cat <<EOF > /target/etc/audit/audit.rules
    -w /etc/passwd -p wa -k passwd_changes
    -w /etc/shadow -p wa -k shadow_changes
    -w /etc/hosts -p wa -k hosts_changes
    -w /var/log -p wa -k log_changes
    -w /bin -p x -k bin_executions
    -w /usr/bin -p x -k usr_bin_executions
    -w /sbin -p x -k sbin_executions
    -w /usr/sbin -p x -k usr_sbin_executions
    EOF
    in-target systemctl restart auditd; \
    \
    # Enable AppArmor \
    in-target systemctl enable apparmor; \
    in-target systemctl start apparmor; \
    \
    # Configure Unattended Upgrades \
    in-target apt-get install -y unattended-upgrades; \
    in-target dpkg-reconfigure --priority=low unattended-upgrades; \
    \
    # Kernel Hardening via sysctl \
    echo "kernel.randomize_va_space=2" >> /etc/sysctl.conf; \
    echo "net.ipv4.conf.all.rp_filter=1" >> /etc/sysctl.conf; \
    echo "net.ipv4.conf.default.rp_filter=1" >> /etc/sysctl.conf; \
    echo "net.ipv6.conf.all.disable_ipv6=1" >> /etc/sysctl.conf; \
    echo "net.ipv6.conf.default.disable_ipv6=1" >> /etc/sysctl.conf; \
    echo "fs.suid_dumpable=0" >> /etc/sysctl.conf; \
    echo "kernel.exec-shield=1" >> /etc/sysctl.conf; \
    echo "net.ipv4.tcp_syncookies=1" >> /etc/sysctl.conf; \
    echo "net.ipv4.icmp_echo_ignore_broadcasts=1" >> /etc/sysctl.conf; \
    echo "net.ipv4.icmp_ignore_bogus_error_responses=1" >> /etc/sysctl.conf; \
    echo "net.ipv4.conf.all.accept_redirects=0" >> /etc/sysctl.conf; \
    echo "net.ipv4.conf.default.accept_redirects=0" >> /etc/sysctl.conf; \
    echo "net.ipv4.conf.all.secure_redirects=1" >> /etc/sysctl.conf; \
    echo "net.ipv4.conf.default.secure_redirects=1" >> /etc/sysctl.conf; \
    sysctl -p; \
    \
    # Restrict Permissions \
    chmod 700 /root; \
    chmod 700 /home/kaliuser; \
    \
    # Enforce Password Policies \
    chage --maxdays 90 kaliuser; \
    chage --maxdays 90 root; \
    \
    # Remove Unnecessary Services and Packages \
    apt-get remove --purge -y telnet ftp nfs-common rpcbind; \
    apt-get autoremove -y; \
    apt-get clean; \
    \
    # Bash Configuration Enhancements \
    echo "alias ll='ls -la'" >> /home/kaliuser/.bashrc; \
    chown kaliuser:kaliuser /home/kaliuser/.bashrc; \
    echo "export HISTCONTROL=ignoredups:erasedups" >> /home/kaliuser/.bashrc; \
    echo "export TMOUT=300" >> /etc/profile; \
    \
    # Sudo Logging \
    echo "Defaults log_output" >> /etc/sudoers.d/logging; \
    mkdir /var/log/sudo; \
    chmod 750 /var/log/sudo; \
    systemctl restart rsyslog; \
    \
    # Install and Configure Additional Security Tools \
    apt-get install -y lynis rkhunter chkrootkit aide docker.io; \
    rkhunter --update; \
    rkhunter --propupd; \
    aideinit; \
    cp /var/lib/aide/aide.db.new /var/lib/aide/aide.db; \
    \
    # Configure AIDE for Integrity Checking \
    echo "/bin" >> /etc/aide/aide.conf; \
    echo "/sbin" >> /etc/aide/aide.conf; \
    echo "/usr/bin" >> /etc/aide/aide.conf; \
    echo "/usr/sbin" >> /etc/aide/aide.conf; \
    echo "/etc" >> /etc/aide/aide.conf; \
    echo "/var/log" >> /etc/aide/aide.conf; \
    \
    # Set up Systemd Service for First Boot Hardening \
    echo "[Unit]" > /target/etc/systemd/system/firstboot.service; \
    echo "Description=First Boot Hardening Script" >> /target/etc/systemd/system/firstboot.service; \
    echo "After=network.target" >> /target/etc/systemd/system/firstboot.service; \
    echo "" >> /target/etc/systemd/system/firstboot.service; \
    echo "[Service]" >> /target/etc/systemd/system/firstboot.service; \
    echo "Type=oneshot" >> /target/etc/systemd/system/firstboot.service; \
    echo "ExecStart=/usr/local/bin/firstboot.sh" >> /target/etc/systemd/system/firstboot.service; \
    echo "RemainAfterExit=yes" >> /target/etc/systemd/system/firstboot.service; \
    echo "" >> /target/etc/systemd/system/firstboot.service; \
    echo "[Install]" >> /target/etc/systemd/system/firstboot.service; \
    echo "WantedBy=multi-user.target" >> /target/etc/systemd/system/firstboot.service; \
    \
    # Create the First Boot Script \
    echo "#!/bin/bash" > /target/usr/local/bin/firstboot.sh; \
    echo "# First Boot Hardening Script" >> /target/usr/local/bin/firstboot.sh; \
    echo "" >> /target/usr/local/bin/firstboot.sh; \
    echo "# Update and Upgrade" >> /target/usr/local/bin/firstboot.sh; \
    echo "apt-get update && apt-get upgrade -y" >> /target/usr/local/bin/firstboot.sh; \
    echo "" >> /target/usr/local/bin/firstboot.sh; \
    echo "# Configure Docker Security" >> /target/usr/local/bin/firstboot.sh; \
    echo "usermod -aG docker kaliuser" >> /target/usr/local/bin/firstboot.sh; \
    echo "systemctl enable docker" >> /target/usr/local/bin/firstboot.sh; \
    echo "systemctl start docker" >> /target/usr/local/bin/firstboot.sh; \
    echo "" >> /target/usr/local/bin/firstboot.sh; \
    echo "# Additional Hardening Steps Can Be Added Here" >> /target/usr/local/bin/firstboot.sh; \
    echo "" >> /target/usr/local/bin/firstboot.sh; \
    echo "# Disable the First Boot Service" >> /target/usr/local/bin/firstboot.sh; \
    echo "systemctl disable firstboot.service" >> /target/usr/local/bin/firstboot.sh; \
    echo "rm /etc/systemd/system/firstboot.service" >> /target/usr/local/bin/firstboot.sh; \
    echo "rm /usr/local/bin/firstboot.sh" >> /target/usr/local/bin/firstboot.sh; \
    \
    # Make the First Boot Script Executable \
    chmod +x /target/usr/local/bin/firstboot.sh; \
    \
    # Enable the First Boot Service \
    systemctl enable firstboot.service; \
    \
    # Remove Temporary Files \
    rm /target/preseed/kali-preseed.cfg; \
    \
    # Final Cleanup \
    apt-get clean

### **Key Enhancements Explained**

1. **Comprehensive Firewall Configuration**:
   - **UFW** is configured with strict default policies (`deny incoming`, `allow outgoing`) and only essential ports (22, 80, 443, 8080) are allowed.
   - Additional ports can be adjusted based on your requirements.

2. **Advanced SSH Hardening**:
   - Disables root login and password-based authentication.
   - Enforces key-based authentication and disables challenge-response authentication to prevent brute-force attacks.

3. **Intrusion Prevention with Fail2Ban**:
   - **Fail2Ban** is configured to monitor SSH and other services, banning IPs that exhibit malicious behavior.
   - Customized `bantime` and `maxretry` settings enhance protection against brute-force attempts.

4. **Comprehensive Auditing with Auditd**:
   - **Auditd** rules are set to monitor critical system files and directories for unauthorized changes.
   - Ensures that all significant events are logged for forensic analysis.

5. **Mandatory Access Control with AppArmor**:
   - **AppArmor** is enabled to enforce strict access controls on applications, limiting their capabilities to the bare minimum required.

6. **Kernel Hardening via Sysctl**:
   - Implements various `sysctl` settings to enhance network security, memory protections, and prevent common attack vectors like IP spoofing and buffer overflows.

7. **Password Policy Enforcement**:
   - **Chage** commands enforce password expiration policies, ensuring regular updates to credentials.

8. **Removal of Unnecessary Services and Packages**:
   - Eliminates potential attack surfaces by purging services like Telnet, FTP, NFS, and RPC.
   - Reduces system bloat and minimizes maintenance overhead.

9. **Bash Configuration Enhancements**:
   - Adds aliases and environment variables to improve usability and security (e.g., command history control to prevent sensitive information leakage).

10. **Sudo Logging for Accountability**:
    - Configures `sudo` to log all commands executed, ensuring traceability of administrative actions.

11. **Installation and Configuration of Additional Security Tools**:
    - **Lynis**, **RKHunter**, **Chkrootkit**, and **AIDE** are installed for ongoing system auditing, rootkit detection, and integrity checking.
    - **Docker** is installed and secured, allowing containerization while maintaining system security.

12. **First Boot Systemd Service for Additional Hardening**:
    - A **systemd** service (`firstboot.service`) is created to execute additional hardening commands on the first boot.
    - This allows for deferred hardening steps that require a running system context.

13. **Cleanup and Finalization**:
    - Removes temporary files and cleans the package cache to reduce the attack surface and save disk space.

### **Variables to Replace**

- `YOUR_SECURE_ROOT_PASSWORD`: Replace with a **strong, unique** password for the root account.
- `USER_SECURE_PASSWORD`: Replace with a **strong, unique** password for the non-root user (`kaliuser`).
- `DISK_ENCRYPTION_PASSPHRASE`: Replace with a **secure passphrase** for disk encryption.

### **Creating the Preseed File**

1. **Create the Preseed File**:
   ```bash
   nano kali-preseed.cfg
